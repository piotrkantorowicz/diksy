name: build, push and scan docker image
on:
  workflow_dispatch:
    inputs:
      registry:
        description: "The docker registry"
        required: true
        type: string
      image:
        description: "The docker image name"
        required: true
        type: string
      push:
        description: "Whether to push the image to the registry"
        required: false
        type: boolean
        default: true
  workflow_call:
    inputs:
      registry:
        description: "The docker registry"
        required: true
        type: string
      image:
        description: "The docker image name"
        required: true
        type: string
      push:
        description: "Whether to push the image to the registry"
        required: false
        type: boolean
        default: true

jobs:
  build-and-push-docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Log in to the GH container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.3.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ inputs.image }}
          tags: |
            type=sha
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.12.0
        with:
          context: .
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: ${{ inputs.image }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
